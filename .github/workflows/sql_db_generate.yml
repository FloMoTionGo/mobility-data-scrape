# This is a basic workflow that is manually triggered

name: SQLite - Generate DB from CSVs

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  push:
    branches:
      - sqlite_test

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run_tests:
    runs-on: ubuntu-20.04 # ubuntu-latest #
    container:
      image: ubuntu-20.04    
      volumes: 
       - ${{ github.workspace }}:/workspace
    continue-on-error: true
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Run DB generate
      run: |-
         db_path='/workspace/scripts/mobility.sqlite'
         created_at=$(date -d "yesterday" +%y%m%d)
         #echo " ----------- (1) ----------- "
         #sqlite3 ${db_path} -cmd ".shell ls scripts/generate_DB.sqlite & pwd"
         #echo " ----------- (2) ----------- "
         #sqlite3 ${db_path} -cmd ".shell ls ${db_path} & pwd"
         #echo " ----------- (3) ----------- "
         #sqlite3 ${db_path} -cmd ".shell more scripts/generate_DB.sqlite"
         #echo " ----------- (4) ----------- "
         sqlite3 ${db_path} < /workspace/scripts/generate_DB.sqlite
         #sqlite3 ${db_path} -cmd ".header on" ".mode csv" ".import CSV_per_day/${created_at}vbb.csv vbb"
         #sqlite3 ${db_path} -cmd ".header on" ".mode csv" ".import CSV_per_day/${created_at}vbb.csv vbb"
         #sqlite3 ${db_path} -cmd ".header on" ".mode csv" ".import CSV_per_day/${created_at}TIER.csv TIER"
         #sqlite3 ${db_path} -cmd ".output dumpedDB.sqlite .dump"
      shell: bash
